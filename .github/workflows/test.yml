name: Test
on:
  push:
    branches: [ dev, main ]
  pull_request:
    branches: [ dev, main ]

jobs:
  test:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]
    
    services:
      # Label used to access the service container
      redis:
        
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install pytest
        python3 -m pip install pytest-cov
        python3 -m pip install -e .[tests,gym,memory_storage]

    - name: Tests
      run: |
        pytest --cov=cst_python --cov-report json  
      shell: bash

    - if: ${{matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'}}
      name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage_report
        path: coverage.json
  
  coverage-check:
    runs-on: ubuntu-latest
    needs: 
      - test

    steps:
    - uses: actions/checkout@v2

    - name: Retrieve coverage report
      uses: actions/download-artifact@v4
      with:
        name: coverage_report
    - name: Coverage Check
      run: |
        python3 tests/check_coverage.py